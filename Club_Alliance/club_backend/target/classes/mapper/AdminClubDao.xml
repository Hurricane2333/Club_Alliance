<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.admin.club.mapper.AdminClubDao">
  <resultMap id="BaseResultMap" type="com.admin.club.entity.AdminClub">
    <id column="club_id" jdbcType="INTEGER" property="clubId" />
    <result column="club_name" jdbcType="VARCHAR" property="clubName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="category" jdbcType="CHAR" property="category" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="president_id" jdbcType="INTEGER" property="presidentId" />
    <result column="requirements" jdbcType="VARCHAR" property="requirements" />
    <result column="favorite_count" jdbcType="INTEGER" property="favoriteCount" />
    <result column="current_members" jdbcType="INTEGER" property="currentMembers" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    club_id, club_name, description, category, icon, president_id, requirements, favorite_count, 
    current_members, `status`, created_at
  </sql>
  <select id="selectByExample" parameterType="com.admin.club.entity.AdminClubExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from club
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from club
    where club_id = #{clubId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from club
    where club_id = #{clubId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.admin.club.entity.AdminClubExample">
    delete from club
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="club_id" keyProperty="clubId" parameterType="com.admin.club.entity.AdminClub" useGeneratedKeys="true">
    insert into club (club_name, description, category, 
      icon, president_id, requirements, 
      favorite_count, current_members, `status`, 
      created_at)
    values (#{clubName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{category,jdbcType=CHAR}, 
      #{icon,jdbcType=VARCHAR}, #{presidentId,jdbcType=INTEGER}, #{requirements,jdbcType=VARCHAR}, 
      #{favoriteCount,jdbcType=INTEGER}, #{currentMembers,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, 
      #{createdAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="club_id" keyProperty="clubId" parameterType="com.admin.club.entity.AdminClub" useGeneratedKeys="true">
    insert into club
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clubName != null">
        club_name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="presidentId != null">
        president_id,
      </if>
      <if test="requirements != null">
        requirements,
      </if>
      <if test="favoriteCount != null">
        favorite_count,
      </if>
      <if test="currentMembers != null">
        current_members,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clubName != null">
        #{clubName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=CHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="presidentId != null">
        #{presidentId,jdbcType=INTEGER},
      </if>
      <if test="requirements != null">
        #{requirements,jdbcType=VARCHAR},
      </if>
      <if test="favoriteCount != null">
        #{favoriteCount,jdbcType=INTEGER},
      </if>
      <if test="currentMembers != null">
        #{currentMembers,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.admin.club.entity.AdminClubExample" resultType="java.lang.Long">
    select count(*) from club
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update club
    <set>
      <if test="record.clubId != null">
        club_id = #{record.clubId,jdbcType=INTEGER},
      </if>
      <if test="record.clubName != null">
        club_name = #{record.clubName,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=CHAR},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.presidentId != null">
        president_id = #{record.presidentId,jdbcType=INTEGER},
      </if>
      <if test="record.requirements != null">
        requirements = #{record.requirements,jdbcType=VARCHAR},
      </if>
      <if test="record.favoriteCount != null">
        favorite_count = #{record.favoriteCount,jdbcType=INTEGER},
      </if>
      <if test="record.currentMembers != null">
        current_members = #{record.currentMembers,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update club
    set club_id = #{record.clubId,jdbcType=INTEGER},
      club_name = #{record.clubName,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=CHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      president_id = #{record.presidentId,jdbcType=INTEGER},
      requirements = #{record.requirements,jdbcType=VARCHAR},
      favorite_count = #{record.favoriteCount,jdbcType=INTEGER},
      current_members = #{record.currentMembers,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=CHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.admin.club.entity.AdminClub">
    update club
    <set>
      <if test="clubName != null">
        club_name = #{clubName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=CHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="presidentId != null">
        president_id = #{presidentId,jdbcType=INTEGER},
      </if>
      <if test="requirements != null">
        requirements = #{requirements,jdbcType=VARCHAR},
      </if>
      <if test="favoriteCount != null">
        favorite_count = #{favoriteCount,jdbcType=INTEGER},
      </if>
      <if test="currentMembers != null">
        current_members = #{currentMembers,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where club_id = #{clubId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.admin.club.entity.AdminClub">
    update club
    set club_name = #{clubName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      category = #{category,jdbcType=CHAR},
      icon = #{icon,jdbcType=VARCHAR},
      president_id = #{presidentId,jdbcType=INTEGER},
      requirements = #{requirements,jdbcType=VARCHAR},
      favorite_count = #{favoriteCount,jdbcType=INTEGER},
      current_members = #{currentMembers,jdbcType=INTEGER},
      `status` = #{status,jdbcType=CHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where club_id = #{clubId,jdbcType=INTEGER}
  </update>
</mapper>