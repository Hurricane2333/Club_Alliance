<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.admin.club.mapper.AdminClubMemberDao">
  <resultMap id="BaseResultMap" type="com.admin.club.entity.AdminClubMember">
    <id column="relation_id" jdbcType="INTEGER" property="relationId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="club_id" jdbcType="INTEGER" property="clubId" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="apply_reason" jdbcType="VARCHAR" property="applyReason" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="review_time" jdbcType="TIMESTAMP" property="reviewTime" />
    <result column="reject_reason" jdbcType="VARCHAR" property="rejectReason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    relation_id, user_id, club_id, `status`, apply_reason, apply_time, review_time, reject_reason
  </sql>
  <select id="selectByExample" parameterType="com.admin.club.entity.AdminClubMemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from club_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from club_member
    where relation_id = #{relationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from club_member
    where relation_id = #{relationId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.admin.club.entity.AdminClubMemberExample">
    delete from club_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="relation_id" keyProperty="relationId" parameterType="com.admin.club.entity.AdminClubMember" useGeneratedKeys="true">
    insert into club_member (user_id, club_id, `status`, 
      apply_reason, apply_time, review_time, 
      reject_reason)
    values (#{userId,jdbcType=INTEGER}, #{clubId,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, 
      #{applyReason,jdbcType=VARCHAR}, #{applyTime,jdbcType=TIMESTAMP}, #{reviewTime,jdbcType=TIMESTAMP}, 
      #{rejectReason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="relation_id" keyProperty="relationId" parameterType="com.admin.club.entity.AdminClubMember" useGeneratedKeys="true">
    insert into club_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="clubId != null">
        club_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="applyReason != null">
        apply_reason,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="reviewTime != null">
        review_time,
      </if>
      <if test="rejectReason != null">
        reject_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="clubId != null">
        #{clubId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="applyReason != null">
        #{applyReason,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reviewTime != null">
        #{reviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rejectReason != null">
        #{rejectReason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.admin.club.entity.AdminClubMemberExample" resultType="java.lang.Long">
    select count(*) from club_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update club_member
    <set>
      <if test="record.relationId != null">
        relation_id = #{record.relationId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.clubId != null">
        club_id = #{record.clubId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.applyReason != null">
        apply_reason = #{record.applyReason,jdbcType=VARCHAR},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reviewTime != null">
        review_time = #{record.reviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rejectReason != null">
        reject_reason = #{record.rejectReason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update club_member
    set relation_id = #{record.relationId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      club_id = #{record.clubId,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=CHAR},
      apply_reason = #{record.applyReason,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      review_time = #{record.reviewTime,jdbcType=TIMESTAMP},
      reject_reason = #{record.rejectReason,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.admin.club.entity.AdminClubMember">
    update club_member
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="clubId != null">
        club_id = #{clubId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="applyReason != null">
        apply_reason = #{applyReason,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reviewTime != null">
        review_time = #{reviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rejectReason != null">
        reject_reason = #{rejectReason,jdbcType=VARCHAR},
      </if>
    </set>
    where relation_id = #{relationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.admin.club.entity.AdminClubMember">
    update club_member
    set user_id = #{userId,jdbcType=INTEGER},
      club_id = #{clubId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=CHAR},
      apply_reason = #{applyReason,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      review_time = #{reviewTime,jdbcType=TIMESTAMP},
      reject_reason = #{rejectReason,jdbcType=VARCHAR}
    where relation_id = #{relationId,jdbcType=INTEGER}
  </update>
</mapper>